[{"C:\\Users\\farzad\\webdev\\adrift-v2\\src\\index.js":"1","C:\\Users\\farzad\\webdev\\adrift-v2\\src\\App.js":"2","C:\\Users\\farzad\\webdev\\adrift-v2\\src\\reportWebVitals.js":"3","C:\\Users\\farzad\\webdev\\adrift-v2\\src\\components\\Menu.js":"4","C:\\Users\\farzad\\webdev\\adrift-v2\\src\\components\\DriftList.js":"5","C:\\Users\\farzad\\webdev\\adrift-v2\\src\\components\\Start.js":"6","C:\\Users\\farzad\\webdev\\adrift-v2\\src\\components\\SubHeader.js":"7","C:\\Users\\farzad\\webdev\\adrift-v2\\src\\components\\Deconstructor.js":"8","C:\\Users\\farzad\\webdev\\adrift-v2\\src\\components\\deconstructor.js":"9","C:\\Users\\farzad\\webdev\\adrift-v2\\src\\data\\testdata.js":"10","C:\\Users\\farzad\\webdev\\adrift-v2\\src\\data\\questions.js":"11","C:\\Users\\farzad\\webdev\\adrift-v2\\src\\components\\DriftView.js":"12","C:\\Users\\farzad\\webdev\\adrift-v2\\src\\serviceWorker.js":"13"},{"size":555,"mtime":1609531182757,"results":"14","hashOfConfig":"15"},{"size":2101,"mtime":1609294902460,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":7197,"mtime":1609530801187,"results":"18","hashOfConfig":"15"},{"size":1183,"mtime":1609428736409,"results":"19","hashOfConfig":"15"},{"size":2838,"mtime":1609292678946,"results":"20","hashOfConfig":"15"},{"size":1429,"mtime":1609292236712,"results":"21","hashOfConfig":"15"},{"size":6698,"mtime":1609112224859,"results":"22","hashOfConfig":"15"},{"size":5491,"mtime":1609250290950,"results":"23","hashOfConfig":"15"},{"size":3900,"mtime":1608654406497,"results":"24","hashOfConfig":"15"},{"size":1181,"mtime":1609112828425,"results":"25","hashOfConfig":"15"},{"size":1686,"mtime":1609531136462,"results":"26","hashOfConfig":"15"},{"size":5172,"mtime":1609289673130,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"13u9y75",{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"C:\\Users\\farzad\\webdev\\adrift-v2\\src\\index.js",[],"C:\\Users\\farzad\\webdev\\adrift-v2\\src\\App.js",["56"],"import React, { useEffect, useState } from \"react\";\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\nimport Dexie from 'dexie';\nimport DriftList from \"./components/DriftList\";\nimport Start from \"./components/Start\";\nimport DriftView from \"./components/DriftView\";\nimport Menu from \"./components/Menu\";\nimport './App.css';\n\n\nconst App = () => {\n\n  const db = new Dexie('adriftDB');\n  db.version(1).stores({\n    drifts: \"id, date, dest, srcSteps, lstSteps, questions, records\"\n  })\n  db.open().catch((err) => {\n      console.log(err.stack || err)\n  })\n\n  const [toggle, setToggle] = useState(false);\n  const [drifts, setDrifts] = useState([]);\n  \n  const toggler = () => setToggle(prev => !prev);\n\n  const addDrift = (theNewDrift) => {\n    db.drifts.add(theNewDrift).then(async () => {\n      let allDrifts = await db.drifts.toArray();\n      setDrifts(allDrifts);\n      console.log('new drift added');\n    });\n  }\n\n  const deleteDrift = async (id) => {\n    console.log(id);\n    db.drifts.delete(id);\n    let allDrifts = await db.drifts.toArray();\n    setDrifts(allDrifts);\n    console.log('the drift deleted');\n  }\n\n  const getDrifts = async () => {\n    let allDrifts = await db.drifts.toArray();\n    setDrifts(allDrifts);\n    console.log('data fetched');\n  }\n\n  // Init the App\n  useEffect(() => {\n    getDrifts();\n  }, []);\n\n  // HOW TO USE A LOADING COMP (SPINNER...)\n  // const [isLoading, setIsLoading] = useState(true);\n  // {isLoading ? 'loading...' : <DriftList drifts={drifts} setToggle={toggler}/>}\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Menu display={toggle} setToggle={toggler}/>\n        <Switch>\n\n          <Route path=\"/\" exact>\n            <DriftList drifts={drifts} setToggle={toggler}/>\n          </Route>\n\n          <Route path=\"/start\" exact>\n            <Start passData={addDrift} setToggle={toggler}/>\n          </Route>\n\n          <Route path=\"/:id\" exact>\n            <DriftView drifts={drifts} passData={deleteDrift} setToggle={toggler}/>\n          </Route>\n\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App\n",["57","58"],"C:\\Users\\farzad\\webdev\\adrift-v2\\src\\reportWebVitals.js",[],"C:\\Users\\farzad\\webdev\\adrift-v2\\src\\components\\Menu.js",["59","60"],"C:\\Users\\farzad\\webdev\\adrift-v2\\src\\components\\DriftList.js",[],"C:\\Users\\farzad\\webdev\\adrift-v2\\src\\components\\Start.js",[],"C:\\Users\\farzad\\webdev\\adrift-v2\\src\\components\\SubHeader.js",[],"C:\\Users\\farzad\\webdev\\adrift-v2\\src\\components\\Deconstructor.js",["61","62","63"],"C:\\Users\\farzad\\webdev\\adrift-v2\\src\\components\\deconstructor.js",[],"C:\\Users\\farzad\\webdev\\adrift-v2\\src\\data\\testdata.js",[],"C:\\Users\\farzad\\webdev\\adrift-v2\\src\\data\\questions.js",[],"C:\\Users\\farzad\\webdev\\adrift-v2\\src\\components\\DriftView.js",[],"C:\\Users\\farzad\\webdev\\adrift-v2\\src\\serviceWorker.js",[],{"ruleId":"64","severity":1,"message":"65","line":51,"column":6,"nodeType":"66","endLine":51,"endColumn":8,"suggestions":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":11,"column":5,"nodeType":"74","messageId":"75","endLine":11,"endColumn":10},{"ruleId":"76","severity":1,"message":"77","line":28,"column":11,"nodeType":"78","messageId":"79","endLine":28,"endColumn":19},{"ruleId":"80","severity":1,"message":"81","line":93,"column":19,"nodeType":"82","messageId":"75","endLine":93,"endColumn":21},{"ruleId":"80","severity":1,"message":"81","line":93,"column":59,"nodeType":"82","messageId":"75","endLine":93,"endColumn":61},{"ruleId":"80","severity":1,"message":"81","line":93,"column":100,"nodeType":"82","messageId":"75","endLine":93,"endColumn":102},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getDrifts'. Either include it or remove the dependency array.","ArrayExpression",["83"],"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-dupe-keys","Duplicate key 'color'.","ObjectExpression","unexpected","no-unused-vars","'siblings' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression",{"desc":"86","fix":"87"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [getDrifts]",{"range":"88","text":"89"},[1344,1346],"[getDrifts]"]